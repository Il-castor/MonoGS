Results:
  save_results: True
  save_dir: "results/kitti"
  save_trj: True
  save_trj_kf_intv: 1 #quanti frame voglio salvare 
  use_gui: True
  eval_rendering: False
  use_wandb: False

Dataset:
  type: 'kitti'
  sensor_type: 'monocular'
  pcd_downsample: 64
  pcd_downsample_init: 32
  adaptive_pointsize: True
  point_size: 0.01

Training:
  init_itr_num: 1000  # Reduced for quicker initialization
  init_gaussian_update: 50  # More frequent updates
  init_gaussian_reset: 250  # More frequent resets
  init_gaussian_th: 0.01  # Adjusted threshold
  init_gaussian_extent: 20  # Adjusted extent
  tracking_itr_num: 300  # Increased for better tracking
  mapping_itr_num: 300  # Increased for better mapping
  gaussian_update_every: 100  # More frequent updates
  gaussian_update_offset: 25  # Adjusted offset
  gaussian_th: 0.8  # Increased threshold
  gaussian_extent: 1.5  # Increased extent
  gaussian_reset: 1500  # More frequent resets
  size_threshold: 10  # Lowered size threshold
  kf_interval: 5  # Same interval
  window_size: 10  # Increased window size
  pose_window: 4  # Increased pose window
  edge_threshold: 1.2  # Increased edge threshold
  rgb_boundary_threshold: 0.02  # Increased RGB boundary threshold

  kf_translation: 0.1  # Increased translation threshold
  kf_min_translation: 0.06  # Increased minimum translation
  kf_overlap: 0.8  # Adjusted overlap
  kf_cutoff: 0.25  # Adjusted cutoff
  prune_mode: 'slam'  # Same prune mode
  single_thread: False  # Same threading
  spherical_harmonics: False  # Same spherical harmonics

  lr:
    cam_rot_delta: 0.006  # Increased rotation learning rate
    cam_trans_delta: 0.004  # Increased translation learning rate


opt_params:
  iterations: 3500  # Slightly increased for more robust optimization
  position_lr_init: 0.001  # Adjusted initial learning rate
  position_lr_final: 0.000001  # Adjusted final learning rate
  position_lr_delay_mult: 0.01  # Same delay multiplier
  position_lr_max_steps: 35000  # Increased max steps
  feature_lr: 0.003  # Increased feature learning rate
  opacity_lr: 0.04  # Adjusted opacity learning rate
  scaling_lr: 0.001  # Same scaling learning rate
  rotation_lr: 0.001  # Same rotation learning rate
  percent_dense: 0.02  # Increased percentage of dense points
  lambda_dssim: 0.3  # Increased DSSIM lambda
  densification_interval: 200  # Increased densification interval
  opacity_reset_interval: 3500  # Increased opacity reset interval
  densify_from_iter: 1000  # Adjusted densify from iteration
  densify_until_iter: 20000  # Adjusted densify until iteration
  densify_grad_threshold: 0.0001  # Adjusted gradient threshold for densification

model_params:
  sh_degree: 1  # Slightly increased SH degree for more detail
  source_path: ""  # Set if using pretrained models
  model_path: ""  # Set if saving/loading models
  resolution: 1024  # Set to desired resolution
  white_background: False  # Same background setting
  data_device: "cuda"  # Ensure using GPU for better performance

pipeline_params:
  convert_SHs_python: False  # Same setting
  compute_cov3D_python: False  # Same setting
